@model MovieDetailsViewModel

@{
    ViewBag.Title = Model.Movie.Title;
}

<div class="row-fluid">
    <div class="span3">
        <img src="@Model.Movie.DetailedImageUrl" alt="@Model.Movie.Title poster" />
    </div>
    <div class="span9">
        <h2>@Model.Movie.Title</h2>
        <table class="table table-condensed table-details">
            <tbody>
                <tr>
                    <td>Year Released</td>
                    <td>@Model.Movie.ReleaseYear</td>
                </tr>
                <tr>
                    <td>Runtime</td>
                    <td>@Model.Movie.Runtime minutes</td>
                </tr>
                <tr>
                    <td>MPAA Rating</td>
                    <td>@Model.Movie.MpaaRating</td>
                </tr>
            </tbody>
        </table>
        <h2 class="@Html.CageFlixRatingClass(Model.AvgRating)" style="display:inline">@Model.AvgRating</h2> &nbsp; 
        <span class="muted"><abbr title="On a scale of 3 to 11, how batshit crazy Nic Cage is in this movie">Average CageFlix rating</abbr></span> <span class="muted">(@Model.NumRatings @Html.Pluralize(Model.NumRatings, "rating"))</span>
        <h3>Synopsis</h3>
        @if (!String.IsNullOrEmpty(Model.Movie.Synopsis))
        {
            <p>@Model.Movie.Synopsis</p>
        }
        else
        {
            <p class="muted">Synopsis not available</p>
        }

        <h3>Critics Consensus</h3>
        @if (!String.IsNullOrEmpty(Model.Movie.CriticsConsensus))
        {
            <p>@Model.Movie.CriticsConsensus</p>
        }
        else
        {
            <p class="muted">Critics consensus not available</p>
        }
    </div>
</div>
<h3>User Reviews</h3>
@if(Model.UserHasSeenMovie && !Model.UserHasReviewedMovie)
{
    using(Html.BeginForm())
    {
        <div class="row-fluid">
            <div class="span12">
                <p id="shits-n-gigs">What about this movie made you shit and what made you giggle?</p>
                <div class="row-fluid">
                    <div class="span6">
                        @Html.TextArea("Shits", new { @class = "span12", rows = "4", placeholder = "What made you shit?" })
                    </div>
                    <div class="span6">
                        @Html.TextArea("Giggles", new { @class = "span12", rows = "4", placeholder = "What made you giggle?" })
                    </div>
                </div>
                <button type="submit" class="btn btn-primary">Submit Review</button>
                @Html.Hidden("MovieID", Model.Movie.ID)
            </div>
        </div>
    }
}
else if (!Model.UserHasSeenMovie)
{
    <p>You need to either rate this movie or click "seen it" before you can write a review.</p>
}
@foreach (var sg in Model.RecentShitsAndGiggles)
{
    <div class="well">
        <p class="muted">@Html.ActionLink(sg.UserProfile.UserName, "index", "user", new { id = sg.UserProfileID }, null) - @sg.DateAdded.ToString("MM/dd/yyyy")</p>
        <div class="row-fluid">
            <div class="span6">
                <legend>Shits</legend>
                @sg.Shits
            </div>
            <div class="span6">
                <legend>Giggles</legend>
                @sg.Giggles
            </div>
        </div>
    </div>
}
